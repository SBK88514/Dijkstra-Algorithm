# -*- coding: utf-8 -*-
"""Dijkstra algorithm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kLuQX4yKikjpVOR8X9OAmmiF9pptt5pd
"""

import cv2
import matplotlib.pyplot as plt
import numpy as np
import heapq as heap

file = "maze.png"
# file = 'maze5.jpg'

img = cv2.imread(file) # read an image from a file using
cv2.circle(img,(5,220), 3, (255,0,0), -1) # add a circle at (5, 220)
cv2.circle(img, (25,5), 3, (0,0,255), -1) # add a circle at (5,5)
plt.figure(figsize=(7,7))
plt.imshow(img) # show the image
img = cv2.imread(file)
plt.show()

#img.shape()

# Your Code Should Be Here


def convert_image_to_binary_matrix(img):
    any_matrix = np.any(img==255, axis=-1)
    return any_matrix


path = ...

def drawPath(img,path, thickness=1):
    '''path is a list of (x,y) tuples'''
    x0,y0=path[0]
    for vertex in path[1:]:
        x1,y1=vertex
        cv2.line(img,(y0,x0),(y1,x1),(255,0,0),thickness)
        x0,y0=vertex

print(convert_image_to_binary_matrix(img))
# drawPath(img,path)
plt.figure(figsize=(7,7))
# plt.imshow(img) # show the image on the screen
# plt.text(0,0, convert_image_to_binary_matrix(img))
# plt.show()

